.. -*-doctest-*-

Forgit Core
===========

TODO Demonstrate and document the core concepts of forgit.

The core includes a python module with functions corresponding to the
CLI commands.  The underlying python library for providing the CLI is
thoroughly tested so we only test the python implementation.

We start in a working directory for the new project.

    >>> import os
    >>> from forgit import testing
    >>> testing.forgit_dir == os.getcwd()
    True

Since a project has arbitrary hierarchy, we can't assume the current
directory is the intended base level of the project before the project
has been initialized.  IOW, project initialization is the way to
declare what the root of the project is.

Before a project is initialized, any command will raise a helpful
error.

    >>> from forgit import core
    >>> core.status()
    Traceback (most recent call last):
    ForgitTODOError: No project has yet been initialized here.  Use
    "forgit help init" for documentation:
    TODO

A directory can be initialized as a forgit project using the 'init'
command.  When successful, nothing is returned.

    >>> core.init()

The status command will return a structure representing the current
state of the project.  If there are no pending actions, nothing is
returned.

    >>> core.status()

When in a sub-directory of the project, the core commands work against
containing project as a whole.

    >>> os.mkdir('foo')
    >>> os.chdir('foo')
    >>> core.status()

Trying to initialize a directory within a project that has already
been initialized raises a helpful error.

    >>> core.init()
    Traceback (most recent call last):
    ForgitTODOError: A project has already been initialized here at:
    ...TODOtmp/foo

Create a new node.  If no parent node is given, the root node is
assumed.

    >>> core.mknode('Foo Client')

If the init command is given a directory as an argument, it will
initialize that directory instead.

    >>> core.init(forgit_dir)
    TODO